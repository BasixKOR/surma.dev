<% include("./tools") %>
<!doctype html>
<meta charset="utf-8" />
<meta name="viewport" content="minimum-scale=1, width=device-width" />
<meta
  name="theme-color"
  content="<%= colors.convertToHex(colors.palette.yellow) %>"
/>
<meta property="og:url" content="<%= meta.domain %><%= page.url %>" />
<% if(typeof title === "string") { %>
<meta property="og:title" content="<%= title %> — surma.dev" />
<meta name="twitter:title" content="<%= title %> — surma.dev" />
<title><%= title %> — surma.dev</title>
<% } else { %>
<meta property="og:title" content="surma.dev" />
<meta name="twitter:title" content="surma.dev" />
<title>surma.dev</title>
<% } %>
<meta property="og:type" content="article" />
<% if(typeof socialmediaimage === "string") { %>
<meta
  property="og:image"
  content="<%= socialmediaimage %>"
/>
<meta name="twitter:card" content="summary_large_image" />
<meta
  name="twitter:image"
  content="<%= socialmediaimage %>"
/>
<% } else { %>
<meta name="twitter:card" content="summary" />
<% } %> <% if(hasExcerpt(content)) { %>
<meta property="og:description" content="<%= excerpt(content) %>" />
<meta name="twitter:description" content="<%= excerpt(content) %>" />
<% } %>
<script>
  document.write(
    `  
    <script type="importmap">
      {
        "imports": {
          "lit1.3.0/": "/node_modules/lit1.3.0/"
        }
      }
    <${'/'}script>
  `
  );
</script>


<meta name="twitter:site" content="@DasSurma" />
<link rel="canonical" href="<%= meta.domain %><%= page.url %>" />
<link
  href="/index.xml"
  type="application/atom+xml"
  rel="alternate"
  title="Sitewide Atom feed"
/>
<style media="screen">
  :root{
    <% for(const [name, color] of Object.entries(colors.palette)) { %>
      --<%= name %>: <%= color %>;
    <% } %>
  }
  @media (prefers-color-scheme: dark) {
    :root {
      <% for(const [name, color] of Object.entries(colors.darkpalette)) { %>
        --<%= name %>: <%= color %>;
      <% } %>
    }
  }
  html.forcelight {
    <% for(const [name, color] of Object.entries(colors.palette)) { %>
      --<%= name %>: <%= color %>;
    <% } %>
  }
  html.forcedark {
    <% for(const [name, color] of Object.entries(colors.darkpalette)) { %>
      --<%= name %>: <%= color %>;
    <% } %>
  }
</style>
<style media="print">
  :root{
    <% for(const [name, color] of Object.entries(colors.palette)) { %>
      --<%= name %>: <%= color %>;
    <% } %>
  }
</style>
<link rel="stylesheet" href="/social.css" media="screen" />
<link rel="stylesheet" href="/styles.css" media="screen" />
<!-- <link rel="stylesheet" href="/styles-print.css" media="print" /> -->
<link rel="icon" href="/avatars/surma.jpg" />
<link rel="apple-touch-icon-precomposed" href="/avatars/surma.jpg" />
<link rel="me" href="mailto:surma@surma.dev" />

<link
  rel="stylesheet"
  href="/syntax.css"
  media="none"
  onload="media = 'all'"
/>
<link rel="stylesheet" href="/katex/styles.css" media="none" onload="media = 'all'" />
<noscript>
  <link rel="stylesheet" href="/syntax.css" />
  <link rel="stylesheet" href="/katex/styles.css" />
</noscript>
<body>
<script type="module">
  const KEY = "darkmode";
  let darkMode = localStorage.getItem(KEY);
  if(typeof darkMode !== "string") {
    darkMode = window.matchMedia("(prefers-color-scheme: dark)").matches.toString();
  }

  function set(darkMode) {
    document.documentElement.classList.toggle("forcedark", darkMode);
    document.documentElement.classList.toggle("forcelight", !darkMode);
    localStorage.setItem(KEY, darkMode);
  }
  set(darkMode === "true");
  import("/darkmode.js").then(m => m.init(KEY, set));
</script>
<header>
  <% if(typeof hasBackButton === "boolean" && hasBackButton) { %>
  <a href="/" class="back">← Back to home</a>
  <% } %>
  <h1>
    <% if(typeof title === "string") { %> <%= title %> <% } else { %> surma.dev
    <% } %> <% if(typeof title === "string" && typeof live === "boolean" && live
    === false) { %>
    <p>UNPUBLISHED / PREVIEW</p>
    <% } %>
  </h1>
  <% if(typeof date === "string") { %>
  <time datetime="<%= date %>">
    <%= date %>
  </time>
  <% } %>
  <div class="arrows">
    <div class="arrow darkblue"></div>
    <div class="arrow blue"></div>
    <div class="arrow lightblue"></div>
    <div class="arrow purple"></div>
    <div class="arrow pink"></div>
    <div class="arrow red"></div>
    <div class="arrow orange"></div>
  </div>
</header>
<main lang="en">
  <%- content %>
</main>
<footer>
  <div class="arrows">
    <div class="arrow yellow"></div>
    <div class="arrow orange"></div>
    <div class="arrow red"></div>
    <div class="arrow pink"></div>
    <div class="arrow purple"></div>
    <div class="arrow lightblue"></div>
    <div class="arrow blue"></div>
  </div>
  <% if(typeof hasBackButton === "boolean" && hasBackButton) { %>
  <a href="/" class="back">← Back to home</a>
  <% } %>
  <section class="me">
    <img src="/avatars/<%= author.avatar %>" class="avatar" />
    <div class="bio">
      <h3 class="name">
        <%= author.name %>
      </h3>
      <p class="info">
        <%- author.bio.replace(/\n/g, "<br>") %>
      </p>
    </div>
    <% 
      for(const [social, link] of Object.entries(author.socials)) {
    %>
    <span
      class="icon social_<%= social %>"
    >
      <a href="<%= link %>" rel="me">
        <%= social %>
      </a>
    </span>
    <% } %>
    <a href="/licenses/index.html" class="licenses">Licenses</a>
  </section>
</footer>
</body>
<script>
  self._ga = {
    // Full Measurement Protocol param reference:
    // https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters
    data: {
      v: "1", // Measurement Protocol version.
      tid: "UA-69989029-1", // Tracking ID.
      cid: `${Date.now()}${Math.random()}`, // Client ID.
      dl: location.href, // Document location.
      aip: 1, // Anonymize IP
    },
    send(additionalParams) {
      navigator.sendBeacon(
        "https://google-analytics.com/collect",
        new URLSearchParams({
          ...this.data,
          ...additionalParams,
        }).toString()
      );
    },
  };
  _ga.send({ t: "pageview" });
</script>
<script src="/vitals.js" type="module"></script>
<% if(typeof disableNoise !== "boolean" || !disableNoise) { %>
<script src="/noise.js" type="module"></script>
<% } %>